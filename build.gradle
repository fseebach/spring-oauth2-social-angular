buildscript {
	ext {
		springCloudVersion = 'Finchley.M7'
		springBootVersion = '2.0.0.RELEASE'
	}
	repositories {
		mavenCentral()
		maven {
	        url 'https://repo.spring.io/libs-milestone'
	    }
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath "io.spring.gradle:dependency-management-plugin:1.0.3.RELEASE"
		classpath 'se.transmode.gradle:gradle-docker:1.2'
	}
}

configure([project(':auth-server'), project(':eureka-server'), project(':gateway'), project(':resource-server1')]) {
	
	apply plugin: 'java'
	apply plugin: 'eclipse'
	apply plugin: 'org.springframework.boot'
	apply plugin: "io.spring.dependency-management"
	apply plugin: 'docker'
	
	group = 'de.fseebach'
	version = '0.0.1-SNAPSHOT'
	sourceCompatibility = 1.8
	
	repositories {
		mavenCentral()
		maven {
	        url 'https://repo.spring.io/libs-milestone'
	    }
	    maven { url 'https://repo.spring.io/snapshot' }
	}
	
	ext {
		springCloudVersion = 'Finchley.M7'
	}
	
	dependencyManagement {
		imports {
			mavenBom "org.springframework.boot:spring-boot-dependencies:${springBootVersion}"
			mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
		}
	}
	
	dependencies {
	    compile("org.springframework.boot:spring-boot-devtools")
	    compile("org.springframework.boot:spring-boot-actuator")
		compile('org.springframework.cloud:spring-cloud-starter-sleuth')
		compile('org.springframework.cloud:spring-cloud-starter-zipkin')
		compile 'org.springframework.cloud:spring-cloud-starter-config'
    	compile 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
		compile("com.fasterxml.jackson.datatype:jackson-datatype-jsr310")
		testCompile('org.springframework.boot:spring-boot-starter-test')
	}
	
	task buildDocker(type: Docker) {
	  baseImage = 'openjdk:8-jdk-alpine'
	  push = true //project.hasProperty('push')
	  tag = "fseebach/$project.name"
	  addFile {
	    from jar
	    rename {'app.jar'}
	  }
	  exposePort(8080)
	  entryPoint(['java', '-Djava.security.egd=file:/dev/./urandom', '-Dspring.profiles.active=docker', '-jar', '/app.jar'])
	}
	
	buildDocker.dependsOn(build)
	
}
	


